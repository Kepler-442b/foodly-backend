# Generated by Django 3.0.3 on 2020-02-26 16:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bundle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_main', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'bundles',
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'colors',
            },
        ),
        migrations.CreateModel(
            name='Filtering',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'filterings',
            },
        ),
        migrations.CreateModel(
            name='HarvestYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=45, unique=True)),
            ],
            options={
                'db_table': 'harvest_years',
            },
        ),
        migrations.CreateModel(
            name='Measure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measure', models.CharField(max_length=10, unique=True)),
            ],
            options={
                'db_table': 'measures',
            },
        ),
        migrations.CreateModel(
            name='Mineral',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, unique=True)),
            ],
            options={
                'db_table': 'minerals',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.CharField(max_length=1000)),
                ('is_in_stock', models.BooleanField(default=True)),
                ('thumbnail_url', models.CharField(max_length=2000)),
                ('is_on_sale', models.BooleanField(default=False)),
                ('energy', models.CharField(max_length=10)),
                ('carbonydrate', models.CharField(max_length=10)),
                ('protein', models.CharField(max_length=10)),
                ('total_fat', models.CharField(max_length=10)),
                ('dietary_fiber', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('ingredient', models.CharField(max_length=2000)),
                ('direction', models.TextField()),
                ('thumbnail_url', models.CharField(max_length=2000)),
                ('company', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'recipes',
            },
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'recommendations',
            },
        ),
        migrations.CreateModel(
            name='Vitamin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, unique=True)),
            ],
            options={
                'db_table': 'vitamins',
            },
        ),
        migrations.CreateModel(
            name='WoodType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'wood_types',
            },
        ),
        migrations.CreateModel(
            name='SimilarProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='from_product', to='products.Product')),
                ('to_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='to_product', to='products.Product')),
            ],
            options={
                'db_table': 'similar_products',
                'unique_together': {('from_product', 'to_product')},
            },
        ),
        migrations.CreateModel(
            name='RecipeRecommendation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='products.Recipe')),
                ('recommendation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='products.Recommendation')),
            ],
            options={
                'db_table': 'recipe_recommendations',
            },
        ),
        migrations.CreateModel(
            name='RecipeFiltering',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filtering', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='products.Filtering')),
                ('recipe', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='products.Recipe')),
            ],
            options={
                'db_table': 'recipe_filterings',
            },
        ),
        migrations.CreateModel(
            name='ProductVitamin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='products.Product')),
                ('vitamin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='products.Vitamin')),
            ],
            options={
                'db_table': 'product_vitamins',
            },
        ),
        migrations.CreateModel(
            name='ProductMineral',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mineral', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='products.Mineral')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='products.Product')),
            ],
            options={
                'db_table': 'product_minerals',
            },
        ),
        migrations.CreateModel(
            name='ProductBundle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bundle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='products.Bundle')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='products.Product')),
            ],
            options={
                'db_table': 'product_bundles',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='bundle',
            field=models.ManyToManyField(through='products.ProductBundle', to='products.Bundle'),
        ),
        migrations.AddField(
            model_name='product',
            name='color',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.Color'),
        ),
        migrations.AddField(
            model_name='product',
            name='harvest_year',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.HarvestYear'),
        ),
        migrations.AddField(
            model_name='product',
            name='measure',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.Measure'),
        ),
        migrations.AddField(
            model_name='product',
            name='mineral',
            field=models.ManyToManyField(through='products.ProductMineral', to='products.Mineral'),
        ),
        migrations.AddField(
            model_name='product',
            name='recipe',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.Recipe'),
        ),
        migrations.AddField(
            model_name='product',
            name='similar_product',
            field=models.ManyToManyField(through='products.SimilarProduct', to='products.Product'),
        ),
        migrations.AddField(
            model_name='product',
            name='vitamin',
            field=models.ManyToManyField(through='products.ProductVitamin', to='products.Vitamin'),
        ),
        migrations.AddField(
            model_name='product',
            name='wood_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.WoodType'),
        ),
    ]
